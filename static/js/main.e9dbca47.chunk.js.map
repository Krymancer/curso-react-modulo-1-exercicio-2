{"version":3,"sources":["components/Card/index.tsx","api/index.ts","utils/apiConstants.ts","Pages/Main/index.tsx","index.tsx"],"names":["Card","className","icon","this","props","author","title","url","React","Component","api","axios","create","baseURL","process","request","method","params","Main","state","query","books","fetch","then","axiosResponse","data","hits","map","hit","sb","error","isCancel","console","log","setState","onChange","e","sq","target","value","onClick","book","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAYMA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,OAAf,UACE,gCACE,cAAC,IAAD,CAAMC,KAAK,6BADb,IAC4CC,KAAKC,MAAMC,UAEvD,gCACE,cAAC,IAAD,CAAMH,KAAK,gBADb,IAC+BC,KAAKC,MAAME,SAE1C,gCACE,cAAC,IAAD,CAAMJ,KAAK,WADb,IAC0BC,KAAKC,MAAMG,c,GAX1BC,IAAMC,WAkBVT,IC3BTU,EAAMC,IAAMC,OAAO,CACvBC,QCJeC,mCDeFC,EARC,SACdC,EACAT,EACAU,GAEA,OAAOP,EAAIK,QAAW,CAAEC,SAAQT,MAAKU,YEOjCC,E,4MACJC,MAAe,CACbb,MAAOQ,YACPM,MAAO,GACPC,MAAO,I,EAaTC,MAAQ,WACN,IAEML,EAAS,CACbG,MAAO,EAAKD,MAAMC,OAGpB,IACEV,EAAc,MAPJ,SAOgBO,GAAQM,MAAK,SAACC,GACtC,IAEMH,EAFWG,EAAcC,KAAKC,KAEbC,KAAI,SAACC,GAM1B,MALmB,CACjBtB,MAAOsB,EAAItB,MACXD,OAAQuB,EAAIvB,OACZE,IAAKqB,EAAIrB,QAKb,EAAKsB,GAAGR,MAEV,MAAOS,GACP,IAAInB,IAAMoB,SAASD,GAGjB,MAAMA,EAFNE,QAAQC,IAAI,sC,wCAlClB,SAAGb,GACDjB,KAAK+B,SAAS,CAAEd,Y,gBAGlB,SAAGC,GACDlB,KAAK+B,UAAS,SAACf,GAAD,MAAY,CACxBE,MAAOA,Q,oBAmCX,WAAU,IAAD,OACP,OACE,sBAAKpB,UAAU,YAAf,UACE,6BAAKE,KAAKgB,MAAMb,QAChB,sBAAKL,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAU,SACVkC,SAAU,SAACC,GAAD,OAAO,EAAKC,GAAGD,EAAEE,OAAOC,UAEpC,wBAAQC,QAASrC,KAAKmB,MAAtB,uBAEF,qBAAKrB,UAAU,UAAf,SACGE,KAAKgB,MAAME,MAAMM,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CAEEpC,OAAQoC,EAAKpC,OACbC,MAAOmC,EAAKnC,MACZC,IAAKkC,EAAKlC,KAHLkC,EAAKnC,sB,GA/DPE,IAAMC,WA4EVS,ICxFfwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9dbca47.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Icon } from \"@iconify/react\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  title: string;\n  author: string;\n  url: string;\n}\n\nclass Card extends React.Component<Props> {\n  render() {\n    return (\n      <div className=\"card\">\n        <div>\n          <Icon icon=\"ant-design:user-outlined\" /> {this.props.author}\n        </div>\n        <div>\n          <Icon icon=\"bx:bxs-book\" /> {this.props.title}\n        </div>\n        <div>\n          <Icon icon=\"il:url\" /> {this.props.url}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import axios, { Method, AxiosResponse } from \"axios\";\nimport { endpoint } from \"../utils/apiConstants\";\n\nconst api = axios.create({\n  baseURL: endpoint,\n});\n\nconst request = <T>(\n  method: Method,\n  url: string, // eslint-disable-next-line\n  params?: any // params are optional and the type vary within the request\n): Promise<AxiosResponse<T>> => {\n  return api.request<T>({ method, url, params });\n};\n\nexport default request;\n","const endpoint = process.env.REACT_APP_HOST_BACKEND;\n\nexport { endpoint };\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport \"./index.scss\";\n\nimport Card from \"../../components/Card\";\n\nimport api from \"../../api\";\n\nimport { response, book } from \"../../api/interfaces\";\n\ntype Props = {};\n\ntype State = {\n  title: string;\n  query: string;\n  books: book[];\n};\n\nclass Main extends React.Component<Props, State> {\n  state: State = {\n    title: process.env.REACT_APP_TITLE || \"Title not found in env file\",\n    query: \"\",\n    books: [],\n  };\n\n  sq(query: string) {\n    this.setState({ query });\n  }\n\n  sb(books: book[]) {\n    this.setState((state) => ({\n      books: books,\n    }));\n  }\n\n  fetch = () => {\n    const URI = \"search\";\n\n    const params = {\n      query: this.state.query,\n    };\n\n    try {\n      api<response>(\"GET\", URI, params).then((axiosResponse) => {\n        const response = axiosResponse.data.hits; // Extracting data from axios response\n\n        const books = response.map((hit) => {\n          const book: book = {\n            title: hit.title,\n            author: hit.author,\n            url: hit.url,\n          };\n          return book;\n        });\n\n        this.sb(books);\n      });\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Marvel API request got cancelled\");\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{this.state.title}</h1>\n        <div className=\"content\">\n          <div className=\"searchContainer\">\n            <input\n              className=\"search\"\n              onChange={(e) => this.sq(e.target.value)}\n            />\n            <button onClick={this.fetch}>Search</button>\n          </div>\n          <div className=\"results\">\n            {this.state.books.map((book) => (\n              <Card\n                key={book.title}\n                author={book.author}\n                title={book.title}\n                url={book.url}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport Main from \"./Pages/Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}